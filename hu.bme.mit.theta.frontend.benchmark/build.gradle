import com.github.jengelman.gradle.plugins.shadow.tasks.*
import com.github.jengelman.gradle.plugins.shadow.*

plugins { id "com.github.johnrengelman.shadow" version "1.2.4" }

dependencies {
  compile project(':hu.bme.mit.theta.common')
  compile project(':hu.bme.mit.theta.core')
  compile project(':hu.bme.mit.theta.formalism')
  compile project(':hu.bme.mit.theta.formalism.sts')
  compile project(':hu.bme.mit.theta.formalism.cfa')
  compile project(':hu.bme.mit.theta.analysis')
  compile project(':hu.bme.mit.theta.analysis.sts')
  compile project(':hu.bme.mit.theta.analysis.cfa')
  compile project(':hu.bme.mit.theta.frontend.aiger')
  compile group: 'commons-cli', name: 'commons-cli', version: '1.3.1'
}

task stsMain(type: ShadowJar) {
    group = ShadowJavaPlugin.SHADOW_GROUP
    manifest.inheritFrom project.tasks.jar.manifest
    doFirst {
            def files = project.configurations.findByName(ShadowBasePlugin.CONFIGURATION_NAME).files
            if (files) {
                def libs = [tasks.jar.manifest.attributes.get('Class-Path')]
                libs.addAll files.collect { "${it.name}" }
                manifest.attributes 'Class-Path': libs.findAll { it }.join(' ')
            }
    }
    from(sourceSets.main.output)
    configurations = [ project.configurations.runtime ]
    //exclude('META-INF/INDEX.LIST', 'META-INF/*.SF', 'META-INF/*.DSA', 'META-INF/*.RSA')
    //classifier = 'fat'
    //mergeServiceFiles()
    manifest { attributes 'Main-Class': 'hu.bme.mit.theta.frontend.benchmark.StsMain' }
    baseName = 'theta-sts'
    classifier = null
    version = null
}